{"ast":null,"code":"var babelHelpers = require('./babel-helpers.js');\n/**\n * MUI React Textfield Helpers\n * @module react/_textfieldHelpers\n */\n\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.textfieldWrapper = void 0;\n\nvar _react = babelHelpers.interopRequireDefault(require(\"react\"));\n\nvar _reactAddonsShallowCompare = babelHelpers.interopRequireDefault(require(\"react-addons-shallow-compare\"));\n\nvar jqLite = babelHelpers.interopRequireWildcard(require(\"../js/lib/jqLite\"));\nvar util = babelHelpers.interopRequireWildcard(require(\"../js/lib/util\"));\n\nvar _helpers = require(\"./_helpers\");\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = babelHelpers.getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = babelHelpers.getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return babelHelpers.possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * Textfield Wrapper\n * @function\n */\n\n\nvar textfieldWrapper = function textfieldWrapper(TextfieldComponent) {\n  var _class, _temp;\n\n  return _temp = _class = /*#__PURE__*/function (_React$Component) {\n    babelHelpers.inherits(_class, _React$Component);\n\n    var _super = _createSuper(_class);\n\n    function _class(props) {\n      var _this;\n\n      babelHelpers.classCallCheck(this, _class);\n      _this = _super.call(this, props); // set initial state\n\n      _this.state = {\n        isEmpty: isEmpty('value' in props ? props.value : props.defaultValue),\n        isTouched: false,\n        isPristine: true\n      }; // warn if value defined but onChange is not\n\n      if ('value' in props && !props.onChange) {\n        util.raiseError(_helpers.controlledMessage, true);\n      } // callbacks\n\n\n      var cb = util.callback;\n      _this.onBlurCB = cb(babelHelpers.assertThisInitialized(_this), 'onBlur');\n      _this.onChangeCB = cb(babelHelpers.assertThisInitialized(_this), 'onChange');\n      _this.onLabelClickCB = cb(babelHelpers.assertThisInitialized(_this), 'onLabelClick');\n      return _this;\n    }\n\n    babelHelpers.createClass(_class, [{\n      key: \"onBlur\",\n      value: function onBlur(ev) {\n        // ignore if event is a window blur\n        if (document.activeElement !== this.controlEl) {\n          this.setState({\n            isTouched: true\n          });\n        } // execute callback\n\n\n        var fn = this.props.onBlur;\n        fn && fn(ev);\n      }\n    }, {\n      key: \"onChange\",\n      value: function onChange(ev) {\n        this.setState({\n          isEmpty: isEmpty(ev.target.value),\n          isPristine: false\n        }); // execute callback\n\n        var fn = this.props.onChange;\n        fn && fn(ev);\n      }\n    }, {\n      key: \"onLabelClick\",\n      value: function onLabelClick(ev) {\n        // pointer-events shim\n        if (util.supportsPointerEvents() === false) {\n          ev.target.style.cursor = 'text';\n          this.controlEl.focus();\n        }\n      }\n    }, {\n      key: \"UNSAFE_componentWillReceiveProps\",\n      value: function UNSAFE_componentWillReceiveProps(nextProps) {\n        if ('value' in nextProps) {\n          this.setState({\n            isEmpty: isEmpty(nextProps.value)\n          });\n        }\n      }\n    }, {\n      key: \"shouldComponentUpdate\",\n      value: function shouldComponentUpdate(nextProps, nextState) {\n        return (0, _reactAddonsShallowCompare.default)(this, nextProps, nextState);\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        // disable MUI js\n        this.controlEl._muiTextfield = true;\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this2 = this;\n\n        var wrapperCls = {},\n            inputCls = {},\n            labelEl;\n        var _this$props = this.props,\n            children = _this$props.children,\n            className = _this$props.className,\n            style = _this$props.style,\n            hint = _this$props.hint,\n            invalid = _this$props.invalid,\n            label = _this$props.label,\n            floatingLabel = _this$props.floatingLabel,\n            other = babelHelpers.objectWithoutProperties(_this$props, [\"children\", \"className\", \"style\", \"hint\", \"invalid\", \"label\", \"floatingLabel\"]);\n        var labelType = jqLite.type(label);\n\n        if (labelType == 'string' && label.length || labelType == 'object') {\n          labelEl = /*#__PURE__*/_react.default.createElement(Label, {\n            text: label,\n            onClick: this.onClickCB,\n            htmlFor: this.props.id\n          });\n        }\n\n        wrapperCls['mui-textfield'] = true;\n        wrapperCls['mui-textfield--float-label'] = floatingLabel;\n        wrapperCls = util.classNames(wrapperCls);\n        inputCls['mui--is-touched'] = this.state.isTouched;\n        inputCls['mui--is-untouched'] = !this.state.isTouched;\n        inputCls['mui--is-pristine'] = this.state.isPristine;\n        inputCls['mui--is-dirty'] = !this.state.isPristine;\n        inputCls['mui--is-empty'] = this.state.isEmpty;\n        inputCls['mui--is-not-empty'] = !this.state.isEmpty;\n        inputCls['mui--is-invalid'] = invalid;\n        inputCls = util.classNames(inputCls);\n        return /*#__PURE__*/_react.default.createElement(\"div\", {\n          className: wrapperCls + ' ' + className,\n          style: style\n        }, /*#__PURE__*/_react.default.createElement(TextfieldComponent, babelHelpers.extends({\n          className: inputCls,\n          inputRef: function inputRef(el) {\n            _this2.controlEl = el;\n          },\n          placeholder: hint\n        }, other, {\n          onBlur: this.onBlurCB,\n          onChange: this.onChangeCB\n        })), labelEl);\n      }\n    }]);\n    return _class;\n  }(_react.default.Component), babelHelpers.defineProperty(_class, \"defaultProps\", {\n    className: '',\n    hint: null,\n    invalid: false,\n    label: null,\n    floatingLabel: false\n  }), _temp;\n};\n/**\n * Label constructor\n * @class\n */\n\n\nexports.textfieldWrapper = textfieldWrapper;\n\nvar Label = /*#__PURE__*/function (_React$Component2) {\n  babelHelpers.inherits(Label, _React$Component2);\n\n  var _super2 = _createSuper(Label);\n\n  function Label() {\n    var _this3;\n\n    babelHelpers.classCallCheck(this, Label);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this3 = _super2.call.apply(_super2, [this].concat(args));\n    babelHelpers.defineProperty(babelHelpers.assertThisInitialized(_this3), \"state\", {\n      style: {}\n    });\n    return _this3;\n  }\n\n  babelHelpers.createClass(Label, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this4 = this;\n\n      this.styleTimer = setTimeout(function () {\n        var s = '.15s ease-out';\n        var style;\n        style = {\n          transition: s,\n          WebkitTransition: s,\n          MozTransition: s,\n          OTransition: s,\n          msTransform: s\n        };\n\n        _this4.setState({\n          style: style\n        });\n      }, 150);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // clear timer\n      clearTimeout(this.styleTimer);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_react.default.createElement(\"label\", {\n        style: this.state.style,\n        onClick: this.props.onClick,\n        htmlFor: this.props.htmlFor,\n        tabIndex: \"-1\" // firefox bugfix (see #252)\n\n      }, this.props.text);\n    }\n  }]);\n  return Label;\n}(_react.default.Component);\n/**\n * isEmpty helper\n * @function\n */\n\n\nbabelHelpers.defineProperty(Label, \"defaultProps\", {\n  text: '',\n  onClick: null\n});\n\nfunction isEmpty(value) {\n  return value === undefined || value === null || value === '';\n}\n/** Define module API */","map":null,"metadata":{},"sourceType":"script"}